name: Deploy to Staging

on:
  workflow_run:
    workflows: ["Test Suite"]
    types: [completed]
    branches: [develop]

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    env:
      HOST: ${{ secrets.HOST }}
      USER: ${{ secrets.USER }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/staging_key
          chmod 600 ~/.ssh/staging_key
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts

      - name: Create Remote Release Directory
        run: |
          RELEASE_ID=$(date +%Y%m%d-%H%M%S)
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
          ssh -i ~/.ssh/staging_key $USER@$HOST "mkdir -p /opt/auto-author/releases/$RELEASE_ID"

      - name: Rsync source (no dev artifacts)
        run: |
          rsync -az --delete \
            --exclude '.git' \
            --exclude 'node_modules' \
            --exclude '.venv' \
            --exclude '__pycache__' \
            --exclude '*.log' \
            --exclude '.next' \
            ./ $USER@$HOST:/opt/auto-author/releases/${{ env.RELEASE_ID }}/
            
      - name: Run server-side deploy
        run: |
          ssh -i ~/.ssh/staging_key $USER@$HOST \
            "bash /opt/auto-author/releases/${{ env.RELEASE_ID }}/scripts/deploy.sh /opt/auto-author/releases/${{ env.RELEASE_ID }}"


      - name: External Health Checks (with backoff)
        run: |
          for i in {1..10}; do
            curl -f https://api.dev.autoauthor.app/api/v1/health && break || sleep 5
          done
          for i in {1..10}; do
            curl -f https://dev.autoauthor.app && break || sleep 5
          done
          
      - name: Cleanup Local Keys
        if: always()
        run: rm -f ~/.ssh/staging_keyts
