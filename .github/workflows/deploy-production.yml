name: Deploy to Production

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  production-tests:
    name: Production Readiness Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        cd frontend && npm ci
        cd ../backend && pip install -r requirements.txt
    
    - name: Run full test suite
      run: |
        cd frontend && npm run test:ci
        cd ../backend && python -m pytest --cov=app
    
    - name: Run security scan
      run: |
        cd frontend && npm audit --audit-level=high
        cd ../backend && pip install safety && safety check -r requirements.txt
    
    - name: Performance benchmark
      run: |
        cd frontend && npm run test:performance
        cd ../backend && python -m pytest tests/performance/

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [production-tests]
    
    environment:
      name: production
      url: https://auto-author.com
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Build frontend
      working-directory: ./frontend
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.PRODUCTION_API_URL }}
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.PRODUCTION_CLERK_KEY }}
      run: |
        npm ci
        npm run build
    
    - name: Deploy to production
      env:
        DEPLOY_KEY: ${{ secrets.PRODUCTION_DEPLOY_KEY }}
        PRODUCTION_HOST: ${{ secrets.PRODUCTION_HOST }}
      run: |
        echo "Deploying to production environment..."
        # Add your deployment commands here
    
    - name: Post-deployment verification
      env:
        PRODUCTION_URL: https://auto-author.com
      run: |
        # Health check
        curl -f $PRODUCTION_URL/health || exit 1
        
        # Critical path tests
        cd backend
        python -m pytest tests/critical/ --base-url=$PRODUCTION_URL

  notify-production:
    name: Notify Production Deployment
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always()
    
    steps:
    - name: Notify team
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ needs.deploy-production.result }}
        text: |
          ðŸš€ Production deployment ${{ needs.deploy-production.result }}
          Version: ${{ github.ref }}
          Commit: ${{ github.sha }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
